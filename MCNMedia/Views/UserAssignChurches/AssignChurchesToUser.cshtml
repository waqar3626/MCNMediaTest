@model List<SelectListItem>;




@{

    List<SelectListItem> userddl = Lists.GetUsers();

    ViewData["Title"] = "AssignChurchesToUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h1>AssignChurchesToUser</h1>
<div class="grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            @{
                var Check = "abc";

                if (ViewBag.ErrorMessage != null)
                {
                    Check = ViewBag.ErrorMessage.ToString();

                }
                if (Check == "ErrorMessage")
                {

                    <div class="row">
                        <div class="col-md-12">
                            <div class="alert alert-danger">
                               Church Already Assign to the User

                            </div>
                        </div>
                    </div>

                }

            }
            <div class="row">
                <div class="col-md-12">
                    <form method="post" asp-action="AssignChurchesToUser" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="col-sm-6">
                            <label class=" text-center"> User </label>
                            @Html.DropDownList("UserId", userddl, new { @class = "form-control", })
                            <span class="text-danger"></span>
                        </div>

                        <div class="col-sm-6 border-light">





                            @for (int i = 0; i < Model.Count(); i++)
                            {


                                <div class="form-group">
                                    <div class="form-check">
                                        <label class="form-check-label">
                                            @Html.CheckBoxFor(m => m[i].Selected, new { @class = "form-check-inline" })
                                            @Html.DisplayFor(m => m[i].Text)
                                        </label>
                                    </div>
                                </div>


                                @Html.HiddenFor(m => m[i].Value)
                                @Html.HiddenFor(m => m[i].Text)

                            }



                        </div>


                        <div class="float-right">
                            <button type="submit" value="Create" class="btn btn-primary btn-sm "><i class="fa fa-plus"></i>Add </button>
                            <a id="back" class="btn btn-secondary btn-sm  " href="../UserAssignChurches/GetUserAssignChurches"><i class="fa fa-chevron-left"></i> Back</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>



@if (ViewBag.Message != null)
{
    <script type="text/javascript">
            window.onload = function () {
              //  alert("@ViewBag.Message");
            };
    </script>
}


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}